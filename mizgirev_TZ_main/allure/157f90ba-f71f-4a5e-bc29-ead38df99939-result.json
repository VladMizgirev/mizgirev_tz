{"name": "Главная страница - 005", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=131.0.6778.70)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7BF432775+28773]\n\t(No symbol) [0x00007FF7BF39AFB0]\n\t(No symbol) [0x00007FF7BF23552A]\n\t(No symbol) [0x00007FF7BF20F2B5]\n\t(No symbol) [0x00007FF7BF2B5FD7]\n\t(No symbol) [0x00007FF7BF2CEA92]\n\t(No symbol) [0x00007FF7BF2AED43]\n\t(No symbol) [0x00007FF7BF27A548]\n\t(No symbol) [0x00007FF7BF27B6B1]\n\tGetHandleVerifier [0x00007FF7BF75F45D+3358029]\n\tGetHandleVerifier [0x00007FF7BF77430D+3443709]\n\tGetHandleVerifier [0x00007FF7BF7683FD+3394797]\n\tGetHandleVerifier [0x00007FF7BF4F929B+842635]\n\t(No symbol) [0x00007FF7BF3A654F]\n\t(No symbol) [0x00007FF7BF3A1FA4]\n\t(No symbol) [0x00007FF7BF3A213D]\n\t(No symbol) [0x00007FF7BF391629]\n\tBaseThreadInitThunk [0x00007FFF6D927374+20]\n\tRtlUserThreadStart [0x00007FFF6DCBCC91+33]", "trace": "@pytest.fixture\n    def base_page():\n>       return BasePage(SetupDriver.setup_driver())\n\ntests\\ui\\conftest.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\ui\\page_and_helpers\\base_page.py:26: in __init__\n    self.open_main_page()\nsrc\\ui\\page_and_helpers\\base_page.py:52: in open_main_page\n    assert self.element_is_present(locator=CustomBasePageLocators.CATEGORY_CARD_BY_NAME.format(\"Телевизоры\"))\nsrc\\ui\\page_and_helpers\\base_page.py:98: in element_is_present\n    self.wait.until(EC.visibility_of_element_located(locator=(By.XPATH, locator)))\nC:\\Users\\Vlad\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nC:\\Users\\Vlad\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nC:\\Users\\Vlad\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\Vlad\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000221433AB9E0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF7BF391629]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF6D927374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFF6DCBCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=131.0.6778.70)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7BF432775+28773]\nE       \t(No symbol) [0x00007FF7BF39AFB0]\nE       \t(No symbol) [0x00007FF7BF23552A]\nE       \t(No symbol) [0x00007FF7BF20F2B5]\nE       \t(No symbol) [0x00007FF7BF2B5FD7]\nE       \t(No symbol) [0x00007FF7BF2CEA92]\nE       \t(No symbol) [0x00007FF7BF2AED43]\nE       \t(No symbol) [0x00007FF7BF27A548]\nE       \t(No symbol) [0x00007FF7BF27B6B1]\nE       \tGetHandleVerifier [0x00007FF7BF75F45D+3358029]\nE       \tGetHandleVerifier [0x00007FF7BF77430D+3443709]\nE       \tGetHandleVerifier [0x00007FF7BF7683FD+3394797]\nE       \tGetHandleVerifier [0x00007FF7BF4F929B+842635]\nE       \t(No symbol) [0x00007FF7BF3A654F]\nE       \t(No symbol) [0x00007FF7BF3A1FA4]\nE       \t(No symbol) [0x00007FF7BF3A213D]\nE       \t(No symbol) [0x00007FF7BF391629]\nE       \tBaseThreadInitThunk [0x00007FFF6D927374+20]\nE       \tRtlUserThreadStart [0x00007FFF6DCBCC91+33]\n\nC:\\Users\\Vlad\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "description": "Проверка корзины", "start": 1731925916836, "stop": 1731925916836, "uuid": "34c16849-a6c9-40af-a91f-9007deed5a19", "historyId": "fdd9c06d4dd5a6b123348a1a07a36829", "testCaseId": "fdd9c06d4dd5a6b123348a1a07a36829", "fullName": "tests.ui.test_base_page.TestCustomBasePage#test_cart_page", "labels": [{"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "test_base_page"}, {"name": "subSuite", "value": "TestCustomBasePage"}, {"name": "host", "value": "DESKTOP-0OQD2GR"}, {"name": "thread", "value": "10372-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.test_base_page"}]}